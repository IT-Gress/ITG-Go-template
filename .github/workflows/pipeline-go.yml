name: Lint, Test, Build and Push Docker Image

on:
  push:
    branches: ['main']
  pull_request:

jobs:
  lint:
    name: Run golangci-lint with project config
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check if Go files changed
        id: go-changed
        run: |
          git fetch origin ${{ github.event.before }}
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '\.go$'; then
            echo "go_changed=true" >> $GITHUB_OUTPUT
          else
            echo "go_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Go
        if: steps.go-changed.outputs.go_changed == 'true'
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Golangci-lint
        if: steps.go-changed.outputs.go_changed == 'true'
        uses: golangci/golangci-lint-action@v8

  test:
    name: Run golang tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Test
        run: go test -v ./...

  build:
    name: Build golang application into Docker image
    needs: [lint, test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Get lowercase names
        id: lowercase
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
          echo "REPO_LC=${REPO,,}" >>${GITHUB_ENV}
        env:
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}

      - name: Build Docker image
        run: docker build -t ghcr.io/${{ env.OWNER_LC }}/${{ env.REPO_LC }}:latest .

      - name: Log in to GHCR
        if: github.event_name == 'push'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push Docker image
        if: github.event_name == 'push'
        run: docker push ghcr.io/${{ env.OWNER_LC }}/${{ env.REPO_LC }}:latest

      - name: Cleanup registry
        if: github.event_name == 'push'
        uses: actions/delete-package-versions@v5
        with:
          package-name: ${{ env.REPO_LC }}
          package-type: 'container'
          min-versions-to-keep: 0
          owner: ${{ github.repository_owner }}
          delete-only-untagged-versions: 'true'
